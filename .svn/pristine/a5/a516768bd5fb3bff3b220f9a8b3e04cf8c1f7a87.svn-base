package com.fc.member.store.user.handler;

import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.fc.common.exception.ErrorCode;
import com.fc.member.store.user.service.IStoreDictionariesService;
import com.fc.protocol.common.message.body.ProtocolResponse;
import com.fc.protocol.demo.request.store.user.StoreDictionariesQueryRequest;
import com.fc.protocol.server.handler.Handler;
import com.fc.protocol.server.handler.ReqCodeMapping;

/**
 * 字典表
 * @author jiahx
 * @date 2019-1-5
 */
@Component
@Handler(module = "store")
public class StoreDictionariesHandler {

	private static Logger log = LoggerFactory.getLogger(StoreDictionariesHandler.class);

	@Autowired
	IStoreDictionariesService storeDictionariesService;

	/**
	 * 查询门店安装资质
	 * @author	jiahx
	 * @see update_name:jiahx update_time:2019-1-7
	 * @param storeDictionariesRequest
	 * @return
	 */
	@ReqCodeMapping(requestClazz = StoreDictionariesQueryRequest.class)
	public ProtocolResponse storeDictionariesQuery(StoreDictionariesQueryRequest storeDictionariesRequest) {
		log.info("StoreDictionariesHandler------>requestStoreDictionariesQuery:{}",  storeDictionariesRequest);
		ProtocolResponse response = ProtocolResponse.newInstance().success();
		try {
			//校验参数是否为空
			String validResult = storeDictionariesRequest.paramValidate();
			if(validResult != null ) {
				return response.error(ErrorCode.PARAM_DATA.getValue()).msg(validResult);
			}
			Map<String,String> map = storeDictionariesService.getResultByStoreDictionaries(storeDictionariesRequest);
			response.addData("result", map);
			log.info("查询结果StoreDictionaries" + map);
		} catch (Exception e) {
			response.error(ErrorCode.QUERY_ERROR.getValue()).msg(ErrorCode.QUERY_ERROR.getDesc());
			log.error("queryStoreDictionaries系统异常", e);
		}
		log.info("StoreDictionariesHandler------>responseStoreDictionariesQuery:{}", response);
		return response;
	}
}
