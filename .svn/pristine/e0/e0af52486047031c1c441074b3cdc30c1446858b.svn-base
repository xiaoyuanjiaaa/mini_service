package com.fc.protocol.client.demo.controller;

import com.fc.protocol.client.demo.config.ProtocolClientPool;
import com.fc.protocol.common.message.body.ProtocolResponse;
import com.fc.protocol.demo.request.store.user.*;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

@Api(tags = "StoreWechatController", description = "门店微养车信息")
@RestController
@RequestMapping("/api/StoreWechat")
public class StoreWechatController {
    private static Logger log = LoggerFactory.getLogger(StoreWechatController.class);
    @Autowired
    private ProtocolClientPool protocolClientPool;
    /**@author zhuj
     *@date 2018/12/28
     * 创建门店微养车信息
     * @param request
     * @param response
     * @return
     * @throws Exception
     */
    @RequestMapping(value = "/createStoreWechatInfo", method = { RequestMethod.POST, RequestMethod.GET })
    @ApiOperation(value = "创建门店微养车信息", notes = "创建门店微养车信息  by zhuj")
    @ResponseBody
    public Object createAmountTradingInfo(CreateStoreWechatRequest createStoreWechatRequest,
                                      HttpServletRequest request, HttpServletResponse response) throws Exception {
        ProtocolResponse echoResponse = protocolClientPool.userClient().sendAndReceived(createStoreWechatRequest);
        log.info("返回请求结果", echoResponse);
        return echoResponse;
    }
    /**@author zhuj
     *@date 2018/12/28
     * 获取门店微养车信息
     * @param request
     * @param response
     * @return
     * @throws Exception
     */
    @RequestMapping(value = "/getStoreWechatInfo", method = { RequestMethod.POST, RequestMethod.GET })
    @ApiOperation(value = "获取门店微养车信息", notes = "返回门店微养车信息  by zhuj")
    @ResponseBody
    public Object getAmountTradingList(GetStoreWechatRequest getStoreWechatRequest,
                                         HttpServletRequest request, HttpServletResponse response) throws Exception {
        ProtocolResponse echoResponse = protocolClientPool.userClient().sendAndReceived(getStoreWechatRequest);
        log.info("返回请求结果", echoResponse);
        return echoResponse;
    }

    /**@author zhuj
     *@date 2018/12/28
     * 更新门店微养车信息
     * @param request
     * @param response
     * @return
     * @throws Exception
     */
    @RequestMapping(value = "/changeStoreWechatInfo", method = { RequestMethod.POST, RequestMethod.GET })
    @ApiOperation(value = "更新门店微养车信息", notes = "更新门店微养车信息  by zhuj")
    @ResponseBody
    public Object getAmountTradingDetial(ChangeStoreWechatRequest changeStoreWechatRequest,
                                         HttpServletRequest request, HttpServletResponse response) throws Exception {
        ProtocolResponse echoResponse = protocolClientPool.userClient().sendAndReceived(changeStoreWechatRequest);
        log.info("返回请求结果", echoResponse);
        return echoResponse;
    }
    /**@author zhuj
     *@date 2018/12/28
     * 解绑门店
     * @param request
     * @param response
     * @return
     * @throws Exception
     */
    @RequestMapping(value = "/deleteAmountTradingStatus", method = { RequestMethod.POST, RequestMethod.GET })
    @ApiOperation(value = "解绑门店", notes = "解绑门店  by zhuj")
    @ResponseBody
    public Object changeAmountTradingStatus(GetStoreWechatRequest getStoreWechatRequest,
                                         HttpServletRequest request, HttpServletResponse response) throws Exception {
        ProtocolResponse echoResponse = protocolClientPool.userClient().sendAndReceived(getStoreWechatRequest);
        log.info("返回请求结果", echoResponse);
        return echoResponse;
    }

}
