package com.fc.protocol.client.demo.controller;

import com.fc.protocol.client.demo.config.ProtocolClientPool;
import com.fc.protocol.client.demo.utils.StoreBankCardRequestUtil;
import com.fc.protocol.common.message.body.ProtocolResponse;
import com.fc.protocol.common.utils.IntegerFactory;
import com.fc.protocol.demo.request.store.user.CreateStoreBankCardRequest;
import com.fc.protocol.demo.request.store.user.StoreBankCardChangeRequest;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.bind.annotation.*;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

@Api(tags = "StoreBankCardController", description = "银行卡信息")
@RestController
@RequestMapping("/api/StoreBankCardInfo")
public class StoreBankCardController {
    private static Logger log = LoggerFactory.getLogger(StoreBankCardController.class);
    @Autowired
    private ProtocolClientPool protocolClientPool;
    /**@author zhuj
     *@date 2018/12/28
     * 验证门店是否绑定了银行卡
     * @param request
     * @param response
     * @return
     * @throws Exception
     */
    @RequestMapping(value = "/checkStoreBankCardInfo", method = { RequestMethod.POST, RequestMethod.GET })
    @ApiOperation(value = "查询门店绑定的银行卡信息", notes = "返回银行卡信息by zhuj")
    @ResponseBody
    public Object checkStoreBankCardInfo(CreateStoreBankCardRequest storeBankCardRequest,
                                       HttpServletRequest request, HttpServletResponse response) throws Exception {
        log.info("StoreBankCardController传人参数", storeBankCardRequest);
        ProtocolResponse echoResponse = protocolClientPool.userClient().sendAndReceived(storeBankCardRequest);
        log.info("返回请求结果", echoResponse);
        return echoResponse;
    }
    /**@author zhuj
     *@date 2018/12/28
     * 保存银行卡信息
     * @param request
     * @param response
     * @return
     * @throws Exception
     */
    @RequestMapping(value = "/createStoreBankCardInfo", method = { RequestMethod.POST, RequestMethod.GET })
    @ApiOperation(value = "绑定银行卡信息", notes = "by zhuj")
    @ResponseBody
    public Object createStoreBankCardInfo(CreateStoreBankCardRequest storeBankCardRequest,
            HttpServletRequest request, HttpServletResponse response) throws Exception {
        log.info("StoreBankCardController传人参数", storeBankCardRequest);
        ProtocolResponse echoResponse = protocolClientPool.userClient().sendAndReceived(storeBankCardRequest);
        log.info("返回请求结果", echoResponse);
        return echoResponse;
    }

    /**@author zhuj
     *@date 2018/12/28
     * 修改银行卡信息
     * @param request
     * @param response
     * @return
     * @throws Exception
     */
    @RequestMapping(value = "/changeStoreBankCardInfo", method = { RequestMethod.POST, RequestMethod.GET })
    @ApiOperation(value = "修改银行卡信息", notes = "by zhuj")
    @ResponseBody
    public Object changeStoreBankCardInfo(CreateStoreBankCardRequest storeBankCardRequest,
                                          HttpServletRequest request, HttpServletResponse response) throws Exception {
        log.info("StoreBankCardController传人参", storeBankCardRequest);
        ProtocolResponse echoResponse = protocolClientPool.userClient().sendAndReceived(storeBankCardRequest);
        log.info("返回请求结果", echoResponse);
        return echoResponse;
    }

    /**@author zhuj
     *@date 2018/12/28
     * 获取银行卡修改记录表
     * @param request
     * @param response
     * @return
     * @throws Exception
     */
    @RequestMapping(value = "/getStoreBankCardChange", method = { RequestMethod.POST, RequestMethod.GET })
    @ApiOperation(value = "获取银行卡修改记录表", notes = "返回银行卡修改列表by zhuj")
    @ResponseBody
    public Object checkStoreBankCardInfo(StoreBankCardChangeRequest storeBankCardChangeRequest,
                                         HttpServletRequest request, HttpServletResponse response) throws Exception {
        ProtocolResponse echoResponse = protocolClientPool.userClient().sendAndReceived(storeBankCardChangeRequest);
        log.info("返回请求结果", echoResponse);
        return echoResponse;
    }
}
