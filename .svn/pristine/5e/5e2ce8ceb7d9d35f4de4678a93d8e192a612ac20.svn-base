package com.fc.protocol.client.demo.controller.member.wechatmaintain;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.fc.protocol.client.IProtocolClient;
import com.fc.protocol.client.demo.config.ProtocolClientPool;
import com.fc.protocol.common.message.body.ProtocolResponse;
import com.fc.protocol.demo.request.wechatmaintain.user.WmcsUserCreateRequest;
import com.fc.protocol.demo.request.wechatmaintain.user.WmcsUserDetailsRequest;
import com.fc.protocol.demo.request.wechatmaintain.user.WmcsUserListPageRequest;
import com.fc.protocol.demo.request.wechatmaintain.user.WmcsUserStoreListRequest;
import com.fc.protocol.demo.request.wechatmaintain.user.WmcsUserUpdateRequest;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;

@Api(tags = "WechatMaintainCouponSstoreUserController", description = "微养车用户会员卡表")
@RestController
@RequestMapping("/api/wechatMaintainCouponSstoreUser")
public class WechatMaintainCouponSstoreUserController {

	private static Logger log = LoggerFactory.getLogger(WechatMaintainCouponSstoreUserController.class);

	@Autowired
	private ProtocolClientPool protocolClientPool;

	/**
	 * 微养车 - 查询会员卡列表
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "/wmcsUserListPage", method = { RequestMethod.POST, RequestMethod.GET })
	@ApiOperation(value = "微养车 - 查询会员卡列表", notes = "微养车 - 查询会员卡列表")
	@ResponseBody
	public Object wmcsUserListPage(HttpServletRequest request, HttpServletResponse response,
			WmcsUserListPageRequest userRequest) throws Exception {
		userRequest.setReqCode("wmcsUserListPage");
		log.info("wmcsUserListPage-request:{}", userRequest);
		log.info("protocolClientPool==null?===>{}", (protocolClientPool == null));
		IProtocolClient userClient = protocolClientPool.userClient();
		log.info("userClient==null?===>{}", (userClient == null));
		ProtocolResponse echoResponse = protocolClientPool.userClient().sendAndReceived(userRequest);
		log.info("wmcsUserListPage-response:{}", echoResponse);
		return echoResponse;
	}

	/**
	 * 微养车 - 查询门店会员用户列表
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "/wmcsUserStoreList", method = { RequestMethod.POST, RequestMethod.GET })
	@ApiOperation(value = "微养车 - 查询门店会员用户列表", notes = "微养车 - 查询门店会员用户列表")
	@ResponseBody
	public Object wmcsUserStoreList(HttpServletRequest request, HttpServletResponse response,
			WmcsUserStoreListRequest userRequest) throws Exception {
		userRequest.setReqCode("wmcsUserStoreList");
		log.info("wmcsUserStoreList-request:{}", userRequest);
		log.info("protocolClientPool==null?===>{}", (protocolClientPool == null));
		IProtocolClient userClient = protocolClientPool.userClient();
		log.info("userClient==null?===>{}", (userClient == null));
		ProtocolResponse echoResponse = protocolClientPool.userClient().sendAndReceived(userRequest);
		log.info("wmcsUserStoreList-response:{}", echoResponse);
		return echoResponse;
	}

	/**
	 * 微养车 - 查询用户在此门店会员卡详细信息
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "/wmcsUserDetails", method = { RequestMethod.POST, RequestMethod.GET })
	@ApiOperation(value = "微养车 - 查询用户在此门店会员卡详细信息", notes = "微养车 - 查询用户在此门店会员卡详细信息")
	@ResponseBody
	public Object wmcsUserDetails(HttpServletRequest request, HttpServletResponse response,
			WmcsUserDetailsRequest userRequest) throws Exception {
		userRequest.setReqCode("wmcsUserDetails");
		log.info("wmcsUserDetails-request:{}", userRequest);
		log.info("protocolClientPool==null?===>{}", (protocolClientPool == null));
		IProtocolClient userClient = protocolClientPool.userClient();
		log.info("userClient==null?===>{}", (userClient == null));
		ProtocolResponse echoResponse = protocolClientPool.userClient().sendAndReceived(userRequest);
		log.info("wmcsUserDetails-response:{}", echoResponse);
		return echoResponse;
	}

	/**
	 * 微养车 - 创建用户会员卡
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "/wmcsUserCreate", method = { RequestMethod.POST, RequestMethod.GET })
	@ApiOperation(value = "微养车 - 创建用户会员卡", notes = "微养车 - 创建用户会员卡")
	@ResponseBody
	public Object wmcsUserCreate(HttpServletRequest request, HttpServletResponse response,
			WmcsUserCreateRequest userRequest) throws Exception {
		userRequest.setReqCode("wmcsUserCreate");
		log.info("wmcsUserCreate-request:{}", userRequest);
		log.info("protocolClientPool==null?===>{}", (protocolClientPool == null));
		IProtocolClient userClient = protocolClientPool.userClient();
		log.info("userClient==null?===>{}", (userClient == null));
		ProtocolResponse echoResponse = protocolClientPool.userClient().sendAndReceived(userRequest);
		log.info("wmcsUserCreate-response:{}", echoResponse);
		return echoResponse;
	}

	/**
	 * 微养车 - 更新用户会员卡信息
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "/wmcsUserUpdate", method = { RequestMethod.POST, RequestMethod.GET })
	@ApiOperation(value = "微养车 - 更新用户会员卡信息", notes = "微养车 - 更新用户会员卡信息")
	@ResponseBody
	public Object wmcsUserUpdate(HttpServletRequest request, HttpServletResponse response,
			WmcsUserUpdateRequest userRequest) throws Exception {
		userRequest.setReqCode("wmcsUserUpdate");
		log.info("wmcsUserUpdate-request:{}", userRequest);
		log.info("protocolClientPool==null?===>{}", (protocolClientPool == null));
		IProtocolClient userClient = protocolClientPool.userClient();
		log.info("userClient==null?===>{}", (userClient == null));
		ProtocolResponse echoResponse = protocolClientPool.userClient().sendAndReceived(userRequest);
		log.info("wmcsUserUpdate-response:{}", echoResponse);
		return echoResponse;
	}
}
